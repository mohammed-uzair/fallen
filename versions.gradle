/**
 * Shared file between builds so that they can all use the same dependencies and
 * repositories.
 **/
//region Build deps
def appFields = [:]
appFields.packageName = "com.example.uzair.iamfalling"
ext.appFields = appFields

def buildVersions = [:]
buildVersions.compileSdkVersion = 28
buildVersions.minSdkVersion = 23
buildVersions.targetSdkVersion = 28
buildVersions.buildToolsVersion = "28.0.3"
buildVersions.javaVersion = JavaVersion.VERSION_1_8
ext.buildVersions = buildVersions
//endregion

//region Versions
//Create a map for all dependency versions
def versions = [:]//Empty map

versions.androidGradlePlugin = '3.5.1'

//region Kotlin versions
versions.kotlinPlugin = '1.3.50'
versions.androidKotlinCore = '1.1.0'
versions.kotlin = '1.3.30'
versions.kotlinCoroutines = '1.3.1'
//endregion

//region Android library versions
versions.appCompat = '1.0.0'

versions.cardView = '1.0.0'

versions.materialDesign = '1.0.0'

versions.recyclerView = '1.0.0'

versions.constraintLayout = '2.0.0-beta1'
//endregion

//region Other library versions
versions.room = '2.2.1'

versions.dagger = '2.25.2'

versions.pagination = '2.1.0'

versions.lifeCycle = '2.0.0'
//endregion

//regionTesting library versions
versions.jUnit = '4.12'

versions.jUnitExt = '1.1.1'

versions.mockito = '3.1.0'

versions.espresso = '3.2.0'
//endregion

//Create an external variable, and assign all versions to it
ext.versions = versions
//endregion

//region Dependencies
//Create a map of all dependencies
def deps = [:]//Empty map

deps.androidGradlePlugin = "com.android.tools.build:gradle:$versions.androidGradlePlugin"
deps.kotlinPlugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlinPlugin"

//Pagination
deps.pagination = "androidx.paging:paging-runtime-ktx:$versions.pagination"

/*Android Libraries*/
deps.appCompat = "androidx.appcompat:appcompat:$versions.appCompat"
deps.cardView = "androidx.cardview:cardview:$versions.cardView"
deps.materialDesign = "com.google.android.material:material:$versions.materialDesign"
deps.recyclerView = "androidx.recyclerview:recyclerview:$versions.recyclerView"
deps.constraintLayout = "androidx.constraintlayout:constraintlayout:$versions.constraintLayout"

deps.lifecycle = "androidx.lifecycle:lifecycle-extensions:2.1.0"

/*Activity/Fragment Life cycle library, keeps track of which life cycle method is it at.*/
deps.lifeCycleExt = "androidx.lifecycle:lifecycle-extensions:$versions.lifeCycle"

//Kotlin
def kotlin = [:]
kotlin.runtime = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.androidCore = "androidx.core:core-ktx:$versions.androidKotlinCore"
deps.kotlin = kotlin

//Kotlin CoRoutines
def coroutines = [:]
coroutines.runtime = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlinCoroutines"
coroutines.core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlinCoroutines"
deps.coroutines = coroutines

/*Room database library - Library used to map objects with SQLite database for db operations
url {@link "https://developer.android.com/topic/libraries/architecture/room"}*/
def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.androidAnnotationProcessor = "androidx.room:room-compiler:$versions.room"

// optional - Kotlin Extensions and Coroutines support for Room
room.kotlinCoroutinesSupport = "androidx.room:room-ktx:$versions.room"
deps.room = room

/*Dagger Dependencies - Use For dependency injection
        For more ic_information visit
        url {@link "https://google.github.io/dagger"}*/
def dagger = [:]
dagger.core = "com.google.dagger:dagger:$versions.dagger"
dagger.annotationProcessor = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.androidSupport = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.androidAnnotationProcessor = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger

/*Testing*/
def testing = [:]
/*JUnit 4 framework
Used to local unit test the application*/
testing.jUnit = "junit:junit:$versions.jUnit"

testing.espresso = "androidx.test.espresso:espresso-contrib:$versions.espresso"
testing.espressoCore = "androidx.test.espresso:espresso-core:$versions.espresso"
testing.espressoIntents = "androidx.test.espresso:espresso-intents:$versions.espresso"
testing.jUnitExt = "androidx.test.ext:junit:$versions.jUnitExt"
testing.room = "androidx.room:room-testing:$versions.room"
testing.mockito = "org.mockito:mockito-core:$versions.mockito"
testing.androidMockito = "org.mockito:mockito-android:$versions.mockito"
deps.testing = testing

//Expose an external variable to access all the dependencies
ext.deps = deps
//endregion

//region Repositories
static def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.mavenCentral()
}

ext.addRepos = this.&addRepos
//endregion